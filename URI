library(data.table)
library(ggplot2)
library(tidyverse)
library(plyr)
library(ggpubr)
library(sjPlot)
library(readxl)

#age===========================================================================
all_ages <- fread('G:/URI/single/age.csv')
head(all_ages)
unique(all_ages$age_name)

age_groups <- c("Under 5", "5 to 9", "10 to 14", "15 to 19", "20 to 24", "25 to 29", "30 to 34", "35 to 39", "40 to 44",
                "45 to 49", "50 to 54", "55 to 59", "60 to 64", "65 to 69", "70 to 74", "75 to 79", "80 plus")

#Incidence
Incidence_age <- all_ages[age_name %in% age_groups &
                            location_name == 'Global' &
                            measure_name == 'Incidence' & 
                            metric_name == 'Rate' & 
                            sex_name %in% c('Male', 'Female') &
                            year == 2019, ]

write.csv(Incidence_age, 'G:/URI/Incidence_age.csv')

Incidence_age$age_id <- as.factor(Incidence_age$age_id)

Incidence_age$age_id <- revalue(Incidence_age$age_id,  c('1' = 'Under 5','6' = '5 to 9','7' = '10 to 14','8' = '15 to 19',
                                                         '9' = '20 to 24','10' = '25 to 29','11' = '30 to 34',
                                                         '12' = '35 to 39','13' = '40 to 44','14' = '45 to 49',
                                                         '15' = '50 to 54','16' = '55 to 59','17' = '60 to 64',
                                                         '18' = '65 to 69','19' = '70 to 74','20' = '75 to 79',
                                                         '21' = '80 plus'))
options(scipen = 2) #使刻度标签不以科学计数法出现

p1 <- ggplot(data = Incidence_age, aes(x = age_id, y = val, fill = sex_name)) + 
  geom_bar(position = 'dodge', stat = 'identity') +
  geom_errorbar(aes(ymin = lower, ymax = upper), width = .2, position = position_dodge(.9), colour = 'grey50')


mytheme <- theme_bw() + 
  theme(
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text = element_text(color = 'black',face = 'plain', size = 12),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    axis.text.x = element_text(size = 11, angle = 45, hjust = 1, vjust = 1),
    axis.text.y = element_text(size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "black", size = 0.5, lineend = 'square'),
    legend.position = "top",
    legend.text = element_text(color = 'black',face = 'bold', size = 12),
    legend.title = element_text(colour = 'black', face = 'bold', size = 12))

p1 + mytheme + 
  ylab('Incidence Rate (per 100,000)') + 
  xlab('Ages (years)') +
  scale_fill_discrete(name = "Gender")

all_ages <- fread('G:/URI/single/age.csv')
head(all_ages)
unique(all_ages$age_name)

age_groups <- c("Under 5", "5 to 9", "10 to 14", "15 to 19", "20 to 24", "25 to 29", "30 to 34", "35 to 39", "40 to 44",
                "45 to 49", "50 to 54", "55 to 59", "60 to 64", "65 to 69", "70 to 74", "75 to 79", "80 plus")

#Death
Death_age <- all_ages[age_name %in% age_groups &
                            location_name == 'Global' &
                            measure_name == 'Deaths' & 
                            metric_name == 'Rate' & 
                            sex_name %in% c('Male', 'Female') &
                            year == 2019, ]

write.csv(Death_age, 'G:/URI/Death_age.csv')

Death_age$age_id <- as.factor(Death_age$age_id)

Death_age$age_id <- revalue(Death_age$age_id,  c('1' = 'Under 5','6' = '5 to 9','7' = '10 to 14','8' = '15 to 19',
                                                         '9' = '20 to 24','10' = '25 to 29','11' = '30 to 34',
                                                         '12' = '35 to 39','13' = '40 to 44','14' = '45 to 49',
                                                         '15' = '50 to 54','16' = '55 to 59','17' = '60 to 64',
                                                         '18' = '65 to 69','19' = '70 to 74','20' = '75 to 79',
                                                         '21' = '80 plus'))

p1 <- ggplot(data = Death_age, aes(x = age_id, y = val, fill = sex_name)) + 
  geom_bar(position = 'dodge', stat = 'identity') +
  geom_errorbar(aes(ymin = lower, ymax = upper), width = .2, position = position_dodge(.9), colour = 'grey50')

p1 + mytheme + 
  ylab('Death Rate (per 100,000)') + 
  xlab('Ages (years)') +
  scale_fill_discrete(name = "Gender")
unique(all_ages$measure_name)

#DALY
DALY_age <- all_ages[age_name %in% age_groups &
                        location_name == 'Global' &
                        measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                        metric_name == 'Rate' & 
                        sex_name %in% c('Male', 'Female') &
                        year == 2019, ]

write.csv(DALY_age, 'G:/URI/DALY_age.csv')

DALY_age$age_id <- as.factor(DALY_age$age_id)

DALY_age$age_id <- revalue(DALY_age$age_id,  c('1' = 'Under 5','6' = '5 to 9','7' = '10 to 14','8' = '15 to 19',
                                                 '9' = '20 to 24','10' = '25 to 29','11' = '30 to 34',
                                                 '12' = '35 to 39','13' = '40 to 44','14' = '45 to 49',
                                                 '15' = '50 to 54','16' = '55 to 59','17' = '60 to 64',
                                                 '18' = '65 to 69','19' = '70 to 74','20' = '75 to 79',
                                                 '21' = '80 plus'))

p1 <- ggplot(data = DALY_age, aes(x = age_id, y = val, fill = sex_name)) + 
  geom_bar(position = 'dodge', stat = 'identity') +
  geom_errorbar(aes(ymin = lower, ymax = upper), width = .2, position = position_dodge(.9), colour = 'grey50')

p1 + mytheme + 
  ylab('DALY Rate (per 100,000)') + 
  xlab('Ages (years)') +
  scale_fill_discrete(name = "Gender")

#prevalence
prevalence_age <- all_ages[age_name %in% age_groups &
                       location_name == 'Global' &
                       measure_name == 'Prevalence' & 
                       metric_name == 'Rate' & 
                       sex_name %in% c('Male', 'Female') &
                       year == 2019, ]

write.csv(prevalence_age, 'G:/URI/prevalence_age.csv')

prevalence_age$age_id <- as.factor(prevalence_age$age_id)

prevalence_age$age_id <- revalue(prevalence_age$age_id,  c('1' = 'Under 5','6' = '5 to 9','7' = '10 to 14','8' = '15 to 19',
                                               '9' = '20 to 24','10' = '25 to 29','11' = '30 to 34',
                                               '12' = '35 to 39','13' = '40 to 44','14' = '45 to 49',
                                               '15' = '50 to 54','16' = '55 to 59','17' = '60 to 64',
                                               '18' = '65 to 69','19' = '70 to 74','20' = '75 to 79',
                                               '21' = '80 plus'))

p1 <- ggplot(data = prevalence_age, aes(x = age_id, y = val, fill = sex_name)) + 
  geom_bar(position = 'dodge', stat = 'identity') +
  geom_errorbar(aes(ymin = lower, ymax = upper), width = .2, position = position_dodge(.9), colour = 'grey50')

p1 + mytheme + 
  ylab('Prevalence Rate (per 100,000)') + 
  xlab('Ages (years)') +
  scale_fill_discrete(name = "Gender")

#age * SDI======================================================================
#incidence
all_ages <- fread('G:/URI/single/age.csv')

age_SDI_incidence <- all_ages[measure_name == 'Incidence' &
                                age_name %in% c("0 to 9", "10 to 54", "55 plus") &
                                metric_name == 'Rate' &
                                sex_name == 'Both' &
                                year == 2019 &
                                location_name %in% c("Global", "High SDI", 
                                                     "High-middle SDI", "Middle SDI",
                                                     "Low-middle SDI", "Low SDI"),]

p1 <- ggplot(data = age_SDI_incidence, aes(x = location_name, y = val, fill = age_name)) +
  geom_bar(position = 'dodge', stat = 'identity') +
  scale_x_discrete(limits = c('Global', 'High SDI', 'High-middle SDI', 'Middle SDI', 'Low-middle SDI', 'Low SDI'))

mytheme <- theme_bw() + 
  theme(
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text.x = element_text(color = 'black', size = 11, angle = 15, hjust = 1, vjust = 1),
    axis.text.y = element_text(color = 'black', size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "black", size = 0.5, lineend = 'square'),
    legend.position = "top",
    legend.text = element_text(colour = 'black', face = 'bold', size = 12),
    legend.title = element_text(colour = 'black', face = 'bold', size = 12))

p1 + mytheme + 
  ylab('Age-standardized Incidence Rate \n (per 100,000)') + 
  xlab('') +
  scale_fill_discrete(name = "Age(Years)")
  
#death
age_SDI_death <- all_ages[measure_name == 'Deaths' &
                                age_name %in% c("0 to 9", "10 to 54", "55 plus") &
                                metric_name == 'Rate' &
                                sex_name == 'Both' &
                                year == 2019 &
                                location_name %in% c("Global", "High SDI", 
                                                     "High-middle SDI", "Middle SDI",
                                                     "Low-middle SDI", "Low SDI"),]

p1 <- ggplot(data = age_SDI_death, aes(x = location_name, y = val, fill = age_name)) +
  geom_bar(position = 'dodge', stat = 'identity') +
  scale_x_discrete(limits = c('Global', 'High SDI', 'High-middle SDI', 'Middle SDI', 'Low-middle SDI', 'Low SDI'))

p1 + mytheme + 
  ylab('Age-standardized Mortality Rate \n (per 100,000)') + 
  xlab('') +
  scale_fill_discrete(name = "Age(Years)")

#DALY
age_SDI_DALY <- all_ages[measure_name == 'DALYs (Disability-Adjusted Life Years)' &
                            age_name %in% c("0 to 9", "10 to 54", "55 plus") &
                            metric_name == 'Rate' &
                            sex_name == 'Both' &
                            year == 2019 &
                            location_name %in% c("Global", "High SDI", 
                                                 "High-middle SDI", "Middle SDI",
                                                 "Low-middle SDI", "Low SDI"),]

p1 <- ggplot(data = age_SDI_DALY, aes(x = location_name, y = val, fill = age_name)) +
  geom_bar(position = 'dodge', stat = 'identity') +
  scale_x_discrete(limits = c('Global', 'High SDI', 'High-middle SDI', 'Middle SDI', 'Low-middle SDI', 'Low SDI'))

p1 + mytheme + 
  ylab('Age-standardized DALY Rate \n (per 100,000)') + 
  xlab('') +
  scale_fill_discrete(name = "Age(Years)")

#age_year_SDI===================================================================
age_year_SDI <- fread('G:/URI/single/age_year_SDI.csv')
ays_incidence <- age_year_SDI[measure_name == 'Incidence' &
                                age_name %in% c("0 to 9", "10 to 54", "55 plus") &
                                metric_name == 'Rate' &
                                sex_name == 'Both' &
                                location_name == "Low SDI",]

ays_incidence$year <- as.factor(ays_incidence$year)

p1 <- ggplot(data = ays_incidence, aes(x = year, y = val, fill = age_name)) +
  geom_bar(stat = 'identity')


mytheme <- theme_bw() + 
  theme(
    axis.title.x  = element_text(face = 'plain', size = 12, lineheight = 0.35),
    axis.title.y  = element_text(face = 'plain', size = 12, lineheight = 0.5),
    axis.text = element_text(color = 'grey36',face = 'plain', size = 10),
    axis.ticks = element_line(color = 'grey36', size = 0.5),
    axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1),
    axis.ticks.length = unit(0.2, 'cm'),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "grey36", size = 0.5, lineend = 'square'),
    legend.position = "right",
    legend.text = element_text(color = 'black',face = 'plain', size = 12),
    legend.title = element_text(colour = 'black', face = 'plain', size = 13))

p1 + mytheme + 
  ylab('Age-standardized Incidence Rate (per 100,000)') + 
  xlab('') +
  scale_fill_discrete(name = "Age(Years)")
#The figures show minor changes, thus abandoned.

#locations======================================================================
location_ids <- fread( 'G:/URI/SDI_1990_2019.csv')
locations <- fread('G:/URI/single/location.csv')

location_ids$SDI_2019 <- location_ids$SDI_2019 * 100

#location_incidence
head(locations)
unique(locations$age_name)
location_incidence <- locations[age_name =='Age-standardized' &
                            measure_name == 'Incidence' & 
                            metric_name == 'Rate' & 
                            sex_name == 'Both' &
                            year == 2019, ]

setkey(location_incidence, location_id)
setkey(location_ids, location_id)

location_incidence <- location_incidence[location_ids]

write.csv(location_incidence, 'G:/URI/location_incidence.csv')

location_incidence$parent_id <- as.factor(location_incidence$parent_id)
location_incidence$parent_id <- revalue(location_incidence$parent_id, c('5'='East Asia', '9'='Southeast Asia', '21'='Oceania', 
                                                  '32'='Central Asia', '42'='Central Europe', '56'='Eastern Europe', 
                                                  '65'='High-income Asia Pacific', '70'='Australasia', '73'='Western Europe', 
                                                  '96'='Southern Latin America', '100'='High-income North America', 
                                                  '104'='Caribbean', '120'='Andean Latin America', '124'='Central Latin America', 
                                                  '134'='Tropical Latin America', '138'='North Africa and Middle East', 
                                                  '159'='South Asia', '167'='Central Sub-Saharan Africa', 
                                                  '174'='Eastern Sub-Saharan Africa', '192'='Southern Sub-Saharan Africa', 
                                                  '199'='Western Sub-Saharan Africa'))


P1 <- ggplot(data = location_incidence) + 
  geom_point(aes(x = SDI_2019, y = val, colour = parent_id), size = 3, shape = 16) +
  stat_smooth(aes(x = SDI_2019, y = val), method = lm, colour = 'grey18', size = 0.5 ) +
  stat_cor(aes(x = SDI_2019, y = val), method = 'spearman')


mytheme <- theme_bw() + 
  theme(
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text = element_text(color = 'black',face = 'plain', size = 12),
    axis.text.y = element_text(size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "black", size = 0.5, lineend = 'square'),
    legend.position = "bottom",
    legend.text = element_text(color = 'black',face = 'bold', size = 12),
    legend.title = element_blank()) #存一份图专门用来放图例

mytheme <- theme_bw() + 
  theme(
    plot.margin = margin(t = 20, r = 5, b = 5, l = 5, unit = 'pt'),
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text = element_text(color = 'black',face = 'plain', size = 12),
    axis.text.y = element_text(size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "black", size = 0.5, lineend = 'square'))

P1 + mytheme + 
  ylab('Age-standardized Incidence Rate \n (per 100,000)') + 
  xlab('Socio-demographic Index') +
  guides(colour = guide_legend(ncol = 4, byrow = F)) 
  #guides(color = F)

#Death
location_death <- locations[age_name =='Age-standardized' &
                                  measure_name == 'Deaths' & 
                                  metric_name == 'Rate' & 
                                  sex_name == 'Both' &
                                  year == 2019, ]

setkey(location_death, location_id)
setkey(location_ids, location_id)

location_death <- location_death[location_ids]
write.csv(location_death, 'G:/URI/location_death.csv')

location_death$parent_id <- as.factor(location_death$parent_id)
location_death$parent_id <- revalue(location_death$parent_id, c('5'='East Asia', '9'='Southeast Asia', '21'='Oceania', 
                                                                        '32'='Central Asia', '42'='Central Europe', '56'='Eastern Europe', 
                                                                        '65'='High-income Asia Pacific', '70'='Australasia', '73'='Western Europe', 
                                                                        '96'='Southern Latin America', '100'='High-income North America', 
                                                                        '104'='Caribbean', '120'='Andean Latin America', '124'='Central Latin America', 
                                                                        '134'='Tropical Latin America', '138'='North Africa and Middle East', 
                                                                        '159'='South Asia', '167'='Central Sub-Saharan Africa', 
                                                                        '174'='Eastern Sub-Saharan Africa', '192'='Southern Sub-Saharan Africa', 
                                                                        '199'='Western Sub-Saharan Africa'))

P1 <- ggplot(data = location_death) + 
  geom_point(aes(x = SDI_2019, y = val, colour = parent_id), size = 3, shape = 16) +
  stat_smooth(aes(x = SDI_2019, y = val), method = lm, colour = 'grey18', size = 0.5 ) +
  stat_cor(aes(x = SDI_2019, y = val), method = 'spearman', label.x = 60) +
  annotate(geom = 'text', x = 10, y = 1.95, label = 'Somalia' ) +
  annotate(geom = 'text', x = 27.10, y = 1.00, label = 'Central African Republic' )


P1 + mytheme + 
  ylab('Age-standardized Mortality Rate \n (per 100,000)') + 
  xlab('Socio-demographic Index') +
  guides(colour = F)

#DALY
location_DALY <- locations[age_name =='Age-standardized' &
                              measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                              metric_name == 'Rate' & 
                              sex_name == 'Both' &
                              year == 2019, ]

setkey(location_DALY, location_id)
setkey(location_ids, location_id)

location_DALY <- location_DALY[location_ids]
write.csv(location_DALY, 'G:/URI/location_DALY.csv')

location_DALY$parent_id <- as.factor(location_DALY$parent_id)
location_DALY$parent_id <- revalue(location_DALY$parent_id, c('5'='East Asia', '9'='Southeast Asia', '21'='Oceania', 
                                                                '32'='Central Asia', '42'='Central Europe', '56'='Eastern Europe', 
                                                                '65'='High-income Asia Pacific', '70'='Australasia', '73'='Western Europe', 
                                                                '96'='Southern Latin America', '100'='High-income North America', 
                                                                '104'='Caribbean', '120'='Andean Latin America', '124'='Central Latin America', 
                                                                '134'='Tropical Latin America', '138'='North Africa and Middle East', 
                                                                '159'='South Asia', '167'='Central Sub-Saharan Africa', 
                                                                '174'='Eastern Sub-Saharan Africa', '192'='Southern Sub-Saharan Africa', 
                                                                '199'='Western Sub-Saharan Africa'))

P1 <- ggplot(data = location_DALY) + 
  geom_point(aes(x = SDI_2019, y = val, colour = parent_id), size = 3, shape = 16) +
  stat_smooth(aes(x = SDI_2019, y = val), method = lm, colour = 'grey18', size = 0.5 ) +
  stat_cor(aes(x = SDI_2019, y = val), method = 'spearman', label.x = 60)


P1 + mytheme + 
  ylab('Age-standardized DALY Rate \n (per 100,000)') + 
  xlab('Socio-demographic Index') +
  guides(colour =  F) +
  annotate(geom = 'text', x = 8.80, y = 208, label = 'Somalia' ) +
  annotate(geom = 'text', x = 27.10, y = 158, label = 'Central African Republic' ) +
  annotate(geom = 'text', x = 35.80, y = 133, label = 'South Sudan' ) +
  annotate(geom = 'text', x = 68.20, y = 126, label = 'Thailand' ) +
  annotate(geom = 'text', x = 50.20, y = 123, label = 'Kenya' )

#table==========================================================================
location_change <- fread('G:/URI/change/locations_change.csv')
location_ids <- fread('G:/Pancreatitis/location_ids.csv')
locations <- fread('G:/URI/single/location.csv')

#Incidence 1990
Incidence_1990 <- locations[measure_name == 'Incidence' & 
                           age_name == 'Age-standardized' & 
                           metric_name == 'Rate' &
                           location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                              32,42,56,64,70,65,100,96,73,103,120,
                                              104,124,134,137,138,158,159,4,5,21,
                                              9,166,167,174,192,199) &
                           year == 1990 &
                           sex_name == 'Both',]

Incidence_1990$Incidence_1990 <- round(Incidence_1990$val, digits = 1)
Incidence_1990$Incidence_1990_upper <- round(Incidence_1990$upper, digits = 1)
Incidence_1990$Incidence_1990_lower <- round(Incidence_1990$lower, digits = 1)
Incidence_1990$Incidence_1990 <- paste(Incidence_1990$Incidence_1990,' (', 
                                       Incidence_1990$Incidence_1990_lower, ' to ', 
                                       Incidence_1990$Incidence_1990_upper, ')', sep = '')

Incidence_1990 <- Incidence_1990[,.(location_id, Incidence_1990)]
setkey(Incidence_1990, location_id)

#incidence 2019
Incidence_2019 <- locations[measure_name == 'Incidence' & 
                              age_name == 'Age-standardized' & 
                              metric_name == 'Rate' &
                              location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                                 32,42,56,64,70,65,100,96,73,103,120,
                                                 104,124,134,137,138,158,159,4,5,21,
                                                 9,166,167,174,192,199) &
                              year == 2019 &
                              sex_name == 'Both',]

Incidence_2019$Incidence_2019 <- round(Incidence_2019$val, digits = 1)
Incidence_2019$Incidence_2019_upper <- round(Incidence_2019$upper, digits = 1)
Incidence_2019$Incidence_2019_lower <- round(Incidence_2019$lower, digits = 1)
Incidence_2019$Incidence_2019 <- paste(Incidence_2019$Incidence_2019,' (', 
                                       Incidence_2019$Incidence_2019_lower, ' to ', 
                                       Incidence_2019$Incidence_2019_upper, ')', sep = '')

Incidence_2019 <- Incidence_2019[,.(location_id, Incidence_2019)]
setkey(Incidence_2019, location_id)

#incidence_change
Incidence_change<- location_change[measure_name == 'Incidence' & 
                              age_name == 'Age-standardized' & 
                              metric_name == 'Rate' &
                              location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                                 32,42,56,64,70,65,100,96,73,103,120,
                                                 104,124,134,137,138,158,159,4,5,21,
                                                 9,166,167,174,192,199) &
                              year_start == 1990 &
                              year_end == 2019 &
                              sex_name == 'Both',]

Incidence_change$Incidence_change <- round(Incidence_change$val, digits = 2)
Incidence_change$Incidence_change_upper <- round(Incidence_change$upper, digits = 2)
Incidence_change$Incidence_change_lower <- round(Incidence_change$lower, digits = 2)
Incidence_change$Incidence_change <- paste(Incidence_change$Incidence_change,' (', 
                                           Incidence_change$Incidence_change_lower, ' to ', 
                                           Incidence_change$Incidence_change_upper, ')', sep = '')

Incidence_change <- Incidence_change[,.(location_id, Incidence_change)]
setkey(Incidence_change, location_id)

#DALY 1990
DALY_1990 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                              age_name == 'Age-standardized' & 
                              metric_name == 'Rate' &
                              location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                                 32,42,56,64,70,65,100,96,73,103,120,
                                                 104,124,134,137,138,158,159,4,5,21,
                                                 9,166,167,174,192,199) &
                              year == 1990 &
                              sex_name == 'Both',]

DALY_1990$DALY_1990 <- round(DALY_1990$val, digits = 1)
DALY_1990$DALY_1990_upper <- round(DALY_1990$upper, digits = 1)
DALY_1990$DALY_1990_lower <- round(DALY_1990$lower, digits = 1)
DALY_1990$DALY_1990 <- paste(DALY_1990$DALY_1990,' (', 
                             DALY_1990$DALY_1990_lower, ' to ', 
                             DALY_1990$DALY_1990_upper, ')', sep = '')

DALY_1990 <- DALY_1990[,.(location_id, DALY_1990)]
setkey(DALY_1990, location_id)

#DALY 2019
DALY_2019 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                         age_name == 'Age-standardized' & 
                         metric_name == 'Rate' &
                         location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                            32,42,56,64,70,65,100,96,73,103,120,
                                            104,124,134,137,138,158,159,4,5,21,
                                            9,166,167,174,192,199) &
                         year == 2019 &
                         sex_name == 'Both',]

DALY_2019$DALY_2019 <- round(DALY_2019$val, digits = 1)
DALY_2019$DALY_2019_upper <- round(DALY_2019$upper, digits = 1)
DALY_2019$DALY_2019_lower <- round(DALY_2019$lower, digits = 1)
DALY_2019$DALY_2019 <- paste(DALY_2019$DALY_2019,' (', 
                             DALY_2019$DALY_2019_lower, ' to ', 
                             DALY_2019$DALY_2019_upper, ')', sep = '')

DALY_2019 <- DALY_2019[,.(location_id, DALY_2019)]
setkey(DALY_2019, location_id)

#DALY change
DALY_change <- location_change[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                         age_name == 'Age-standardized' & 
                         metric_name == 'Rate' &
                         location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                            32,42,56,64,70,65,100,96,73,103,120,
                                            104,124,134,137,138,158,159,4,5,21,
                                            9,166,167,174,192,199) &
                         year_start == 1990 &
                         year_end == 2019 &
                         sex_name == 'Both',]

DALY_change$DALY_change <- round(DALY_change$val, digits = 2)
DALY_change$DALY_change_upper <- round(DALY_change$upper, digits = 2)
DALY_change$DALY_change_lower <- round(DALY_change$lower, digits = 2)
DALY_change$DALY_change <- paste(DALY_change$DALY_change,' (', 
                                 DALY_change$DALY_change_lower, ' to ', 
                                 DALY_change$DALY_change_upper, ')', sep = '')

DALY_change <- DALY_change[,.(location_id, location_name, DALY_change)]
setkey(DALY_change, location_id)

Table1 <- DALY_change[DALY_1990]
setkey(Table1, location_id)
Table1 <- Table1[DALY_2019]
setkey(Table1, location_id)
Table1 <- Table1[Incidence_1990]
setkey(Table1, location_id)
Table1 <- Table1[Incidence_2019]
setkey(Table1, location_id)
Table1 <- Table1[Incidence_change]
head(Table1)

Table1 <- Table1[,.(location_id, location_name, Incidence_1990, Incidence_2019, 
                    Incidence_change, DALY_1990, DALY_2019, DALY_change)]

tab_df(Table1[ ,1:8])

#Table_All_ages=================================================================
location_change <- fread('G:/URI/change/locations_change.csv')
location_ids <- fread('G:/Pancreatitis/location_ids.csv')
locations <- fread('G:/URI/single/location.csv')

unique(locations$age_name)
#Incidence 1990
Incidence_1990 <- locations[measure_name == 'Incidence' & 
                              age_name == 'All Ages' & 
                              metric_name == 'Number' &
                              location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                                 32,42,56,64,70,65,100,96,73,103,120,
                                                 104,124,134,137,138,158,159,4,5,21,
                                                 9,166,167,174,192,199) &
                              year == 1990 &
                              sex_name == 'Both',]

Incidence_1990$Incidence_1990 <- round(Incidence_1990$val/1000000, digits = 1)
Incidence_1990$Incidence_1990_upper <- round(Incidence_1990$upper/1000000, digits = 1)
Incidence_1990$Incidence_1990_lower <- round(Incidence_1990$lower/1000000, digits = 1)
Incidence_1990$Incidence_1990 <- paste(Incidence_1990$Incidence_1990,' (', 
                                       Incidence_1990$Incidence_1990_lower, ' to ', 
                                       Incidence_1990$Incidence_1990_upper, ')', sep = '')

Incidence_1990 <- Incidence_1990[,.(location_id, Incidence_1990)]
setkey(Incidence_1990, location_id)

#incidence 2019
Incidence_2019 <- locations[measure_name == 'Incidence' & 
                              age_name == 'All Ages' & 
                              metric_name == 'Number' &
                              location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                                 32,42,56,64,70,65,100,96,73,103,120,
                                                 104,124,134,137,138,158,159,4,5,21,
                                                 9,166,167,174,192,199) &
                              year == 2019 &
                              sex_name == 'Both',]

Incidence_2019$Incidence_2019 <- round(Incidence_2019$val/1000000, digits = 1)
Incidence_2019$Incidence_2019_upper <- round(Incidence_2019$upper/1000000, digits = 1)
Incidence_2019$Incidence_2019_lower <- round(Incidence_2019$lower/1000000, digits = 1)
Incidence_2019$Incidence_2019 <- paste(Incidence_2019$Incidence_2019,' (', 
                                       Incidence_2019$Incidence_2019_lower, ' to ', 
                                       Incidence_2019$Incidence_2019_upper, ')', sep = '')

Incidence_2019 <- Incidence_2019[,.(location_id, Incidence_2019)]
setkey(Incidence_2019, location_id)

#incidence_change
Incidence_change<- location_change[measure_name == 'Incidence' & 
                                     age_name == 'All Ages' & 
                                     metric_name == 'Number' &
                                     location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                                        32,42,56,64,70,65,100,96,73,103,120,
                                                        104,124,134,137,138,158,159,4,5,21,
                                                        9,166,167,174,192,199) &
                                     year_start == 1990 &
                                     year_end == 2019 &
                                     sex_name == 'Both',]

Incidence_change$Incidence_change <- round(Incidence_change$val, digits = 2)
Incidence_change$Incidence_change_upper <- round(Incidence_change$upper, digits = 2)
Incidence_change$Incidence_change_lower <- round(Incidence_change$lower, digits = 2)
Incidence_change$Incidence_change <- paste(Incidence_change$Incidence_change,' (', 
                                           Incidence_change$Incidence_change_lower, ' to ', 
                                           Incidence_change$Incidence_change_upper, ')', sep = '')

Incidence_change <- Incidence_change[,.(location_id, Incidence_change)]
setkey(Incidence_change, location_id)

#DALY 1990
DALY_1990 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                         age_name == 'All Ages' & 
                         metric_name == 'Number' &
                         location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                            32,42,56,64,70,65,100,96,73,103,120,
                                            104,124,134,137,138,158,159,4,5,21,
                                            9,166,167,174,192,199) &
                         year == 1990 &
                         sex_name == 'Both',]

DALY_1990$DALY_1990 <- round(DALY_1990$val/1000, digits = 1)
DALY_1990$DALY_1990_upper <- round(DALY_1990$upper/1000, digits = 1)
DALY_1990$DALY_1990_lower <- round(DALY_1990$lower/1000, digits = 1)
DALY_1990$DALY_1990 <- paste(DALY_1990$DALY_1990,' (', 
                             DALY_1990$DALY_1990_lower, ' to ', 
                             DALY_1990$DALY_1990_upper, ')', sep = '')

DALY_1990 <- DALY_1990[,.(location_id, DALY_1990)]
setkey(DALY_1990, location_id)

#DALY 2019
DALY_2019 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                         age_name == 'All Ages' & 
                         metric_name == 'Number' &
                         location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                            32,42,56,64,70,65,100,96,73,103,120,
                                            104,124,134,137,138,158,159,4,5,21,
                                            9,166,167,174,192,199) &
                         year == 2019 &
                         sex_name == 'Both',]

DALY_2019$DALY_2019 <- round(DALY_2019$val/1000, digits = 1)
DALY_2019$DALY_2019_upper <- round(DALY_2019$upper/1000, digits = 1)
DALY_2019$DALY_2019_lower <- round(DALY_2019$lower/1000, digits = 1)
DALY_2019$DALY_2019 <- paste(DALY_2019$DALY_2019,' (', 
                             DALY_2019$DALY_2019_lower, ' to ', 
                             DALY_2019$DALY_2019_upper, ')', sep = '')

DALY_2019 <- DALY_2019[,.(location_id, DALY_2019)]
setkey(DALY_2019, location_id)

#DALY change
DALY_change <- location_change[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                                 age_name == 'All Ages' & 
                                 metric_name == 'Number' &
                                 location_id %in% c(1,44637,44636,44639,44634,44635,31,
                                                    32,42,56,64,70,65,100,96,73,103,120,
                                                    104,124,134,137,138,158,159,4,5,21,
                                                    9,166,167,174,192,199) &
                                 year_start == 1990 &
                                 year_end == 2019 &
                                 sex_name == 'Both',]

DALY_change$DALY_change <- round(DALY_change$val, digits = 2)
DALY_change$DALY_change_upper <- round(DALY_change$upper, digits = 2)
DALY_change$DALY_change_lower <- round(DALY_change$lower, digits = 2)
DALY_change$DALY_change <- paste(DALY_change$DALY_change,' (', 
                                 DALY_change$DALY_change_lower, ' to ', 
                                 DALY_change$DALY_change_upper, ')', sep = '')

DALY_change <- DALY_change[,.(location_id, location_name, DALY_change)]
setkey(DALY_change, location_id)

Table1 <- DALY_change[DALY_1990]
setkey(Table1, location_id)
Table1 <- Table1[DALY_2019]
setkey(Table1, location_id)
Table1 <- Table1[Incidence_1990]
setkey(Table1, location_id)
Table1 <- Table1[Incidence_2019]
setkey(Table1, location_id)
Table1 <- Table1[Incidence_change]
head(Table1)

Table1 <- Table1[,.(location_id, location_name, Incidence_1990, Incidence_2019, 
                    Incidence_change, DALY_1990, DALY_2019, DALY_change)]

tab_df(Table1[ ,1:8])

#annualized change==============================================================
location_change <- fread('G:/URI/change/locations_change.csv')
location_ids <- fread( 'G:/URI/SDI_1990_2019.csv')
location_ids$SDI_2019 <- location_ids$SDI_2019 * 100

#incidence 
AR_incidence <- location_change[measure_name == 'Incidence'& sex_name == 'Both'& 
                         age_name == 'Age-standardized'& metric_name == 'Rate' &
                         year_start == 1990 & year_end == 2019,]

setkey(AR_incidence, location_id)
setkey(location_ids, location_id)

AR_incidence <- AR_incidence[location_ids]
write.csv(AR_incidence, 'G:/URI/AR_incidence.csv')

AR_incidence$parent_id <- as.factor(AR_incidence$parent_id)
AR_incidence$parent_id <- revalue(AR_incidence$parent_id, c('5'='East Asia', '9'='Southeast Asia', '21'='Oceania', 
                                                            '32'='Central Asia', '42'='Central Europe', '56'='Eastern Europe', 
                                                            '65'='High-income Asia Pacific', '70'='Australasia', '73'='Western Europe', 
                                                            '96'='Southern Latin America', '100'='High-income North America', 
                                                            '104'='Caribbean', '120'='Andean Latin America', '124'='Central Latin America', 
                                                            '134'='Tropical Latin America', '138'='North Africa and Middle East', 
                                                            '159'='South Asia', '167'='Central Sub-Saharan Africa', 
                                                            '174'='Eastern Sub-Saharan Africa', '192'='Southern Sub-Saharan Africa', 
                                                            '199'='Western Sub-Saharan Africa'))

P1 <- ggplot(data = AR_incidence) + 
  geom_point(aes(x = SDI_2019, y = val, colour = parent_id), size = 3, shape = 16) + 
  geom_hline(yintercept = 0, color = 'grey50', linetype = 'dashed')

mytheme <- theme_bw() + 
  theme(
    plot.margin = margin(t = 20, r = 5, b = 5, l = 5, unit = 'pt'),
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text = element_text(color = 'black',face = 'plain', size = 12),
    axis.text.y = element_text(size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "black", size = 0.5, lineend = 'square'))

P1 + mytheme + 
  ylab('Annualized Rate of Change in \n Age-standardized Incidence Rate') + 
  xlab('Socio-demographic Index') + 
  guides(colour = F) +
  annotate('text', x = 65.8, y = -0.0720, label = 'Egypt') +
  annotate('text', x = 50.5, y = -0.0487, label = 'Zambia') +
  annotate('text', x = 43.2, y = -0.0370, label = 'Haiti') +
  annotate('text', x = 44.9, y = 0.0939, label = 'Pakistan') +
  annotate('text', x = 52.6, y = 0.0427 , label = 'Guatemda') +
  #annotate('segment', x = 0.671, xend = 0.645, y = 0.433, yend = 0.333) +
  annotate('text', x = 42.7, y = 0.0360, label = 'Rwanda' )

#death
AR_death <- location_change[measure_name == 'Deaths'& sex_name == 'Both'& 
                                  age_name == 'Age-standardized'& metric_name == 'Rate' &
                                  year_start == 1990 & year_end == 2019,]

setkey(AR_death, location_id)
setkey(location_ids, location_id)

AR_death <- AR_death[location_ids]
write.csv(AR_death, 'G:/URI/AR_death.csv')


AR_death$parent_id <- as.factor(AR_death$parent_id)
AR_death$parent_id <- revalue(AR_death$parent_id, c('5'='East Asia', '9'='Southeast Asia', '21'='Oceania', 
                                                            '32'='Central Asia', '42'='Central Europe', '56'='Eastern Europe', 
                                                            '65'='High-income Asia Pacific', '70'='Australasia', '73'='Western Europe', 
                                                            '96'='Southern Latin America', '100'='High-income North America', 
                                                            '104'='Caribbean', '120'='Andean Latin America', '124'='Central Latin America', 
                                                            '134'='Tropical Latin America', '138'='North Africa and Middle East', 
                                                            '159'='South Asia', '167'='Central Sub-Saharan Africa', 
                                                            '174'='Eastern Sub-Saharan Africa', '192'='Southern Sub-Saharan Africa', 
                                                            '199'='Western Sub-Saharan Africa'))

P1 <- ggplot(data = AR_death) + 
  geom_point(aes(x = SDI_2019, y = val, colour = parent_id), size = 3, shape = 16) + 
  geom_hline(yintercept = 0, color = 'grey50', linetype = 'dashed')

P1 + mytheme + 
  ylab('Annualized Rate of Change in \n Age-standardized Mortality Rate') + 
  xlab('Socio-demographic Index') + 
  guides(colour = F) +
  annotate('text', x = 68.6, y = 1.880, label = 'Panama') +
  annotate('text', x = 68.0, y = 0.812, label = 'Costa Rica') +
  annotate('text', x = 86.1, y = 0.720, label = 'Singapore') +
  annotate('text', x = 85.1, y = 0.508, label = 'Kuwait') +
  annotate('text', x = 55.7, y = 0.153 , label = 'Ghana') +
  #annotate('segment', x = 0.671, xend = 0.645, y = 0.433, yend = 0.333) +
  annotate('text', x = 73.6, y = 0.150, label = 'Ukraine' )

#DALY
AR_DALY <- location_change[measure_name == 'DALYs (Disability-Adjusted Life Years)'& sex_name == 'Both'& 
                              age_name == 'Age-standardized'& metric_name == 'Rate' &
                              year_start == 1990 & year_end == 2019,]

setkey(AR_DALY, location_id)
setkey(location_ids, location_id)

AR_DALY <- AR_DALY[location_ids]
write.csv(AR_DALY, 'G:/URI/AR_DALY.csv')


AR_DALY$parent_id <- as.factor(AR_DALY$parent_id)
AR_DALY$parent_id <- revalue(AR_DALY$parent_id, c('5'='East Asia', '9'='Southeast Asia', '21'='Oceania', 
                                                    '32'='Central Asia', '42'='Central Europe', '56'='Eastern Europe', 
                                                    '65'='High-income Asia Pacific', '70'='Australasia', '73'='Western Europe', 
                                                    '96'='Southern Latin America', '100'='High-income North America', 
                                                    '104'='Caribbean', '120'='Andean Latin America', '124'='Central Latin America', 
                                                    '134'='Tropical Latin America', '138'='North Africa and Middle East', 
                                                    '159'='South Asia', '167'='Central Sub-Saharan Africa', 
                                                    '174'='Eastern Sub-Saharan Africa', '192'='Southern Sub-Saharan Africa', 
                                                    '199'='Western Sub-Saharan Africa'))

P1 <- ggplot(data = AR_DALY) + 
  geom_point(aes(x = SDI_2019, y = val, colour = parent_id), size = 3, shape = 16) + 
  geom_hline(yintercept = 0, color = 'grey50', linetype = 'dashed')

P1 + mytheme + 
  ylab('Annualized Rate of Change in \n Age-standardized DALY Rate') + 
  xlab('Socio-demographic Index') + 
  guides(color = F) +
  annotate('text', x = 68.6, y = 0.110, label = 'Panama') +
  annotate('segment', x = 54.9, xend = 58.7, y = 0.012, yend = 0.040) +
  annotate('text', x = 58.7, y = 0.062 , label = 'Ghana') +
  annotate('segment', x = 54.1, xend = 51.8, y = 0.00648, yend = 0.030) +
  annotate('text', x = 48.0, y = 0.052 , label = 'Morocco')

#years * SDI * sex==============================================================
years <- fread('G:/URI/single/years.csv')
unique(years$location_name)

#years_sex_Incidence
years_sex_Incidence <- years[measure_name == 'Incidence' & 
                           age_name == 'Age-standardized' & 
                           metric_name == 'Rate' &
                           location_name == 'Global',]

years_sex_Incidence$year <- as.factor(years_sex_Incidence$year)

P1 <- ggplot(data = years_sex_Incidence, aes(group = sex_name)) +
  geom_line(aes(x = year, y = val, color = sex_name), size = 0.8) +
  geom_point(aes(x = year, y = val, shape = sex_name, color = sex_name), size = 3)

mytheme <- theme_bw() + 
  theme(
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text = element_text(color = 'black',face = 'plain', size = 12),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    axis.text.x = element_text(size = 11, angle = 0, hjust = 0.5, vjust = 1),
    axis.text.y = element_text(size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "black", size = 0.5, lineend = 'square'),
    legend.position = "top",
    legend.text = element_text(color = 'black',face = 'bold', size = 12),
    legend.title = element_text(colour = 'black', face = 'bold', size = 12))

P1 + mytheme + xlab('Year') + 
  ylab('Age-standardized Incidence Rate \n (per 100,000)') + 
  scale_color_discrete('Gender') + 
  scale_shape_discrete('Gender') +
  scale_x_discrete(labels = c('1990','','','','', 
                              '1995','','','','', 
                              '2000','','','','', 
                              '2005','','','','',  
                              '2010','','','','',  
                              '2015','','','',  
                              '2019'))

#years_SDI_Incidence 
years_SDI_Incidence <- years[measure_name == 'Incidence' & 
                               age_name == 'Age-standardized' & 
                               metric_name == 'Rate' &
                               sex_name == 'Both' &
                               location_name %in% c("Global", "High SDI", 
                                                    "High-middle SDI", "Middle SDI",
                                                    "Low-middle SDI", "Low SDI"),]
years_SDI_Incidence$year <- as.factor(years_SDI_Incidence$year)

P1 <- ggplot(data = years_SDI_Incidence, aes(group = location_name)) +
  geom_line(aes(x = year, y = val, color = location_name), size = 0.8) +
  geom_point(aes(x = year, y = val, color = location_name), size = 3)

P1 + mytheme + xlab('Year') + 
  guides(color = guide_legend(title = NULL)) +
  ylab('Age-standardized Incidence Rate \n (per 100,000)') +
  scale_x_discrete(labels = c('1990','','','','', 
                              '1995','','','','', 
                              '2000','','','','', 
                              '2005','','','','',  
                              '2010','','','','',  
                              '2015','','','',  
                              '2019'))

#years_sex_death
years_sex_death <- years[measure_name == 'Deaths' & 
                               age_name == 'Age-standardized' & 
                               metric_name == 'Rate' &
                               location_name == 'Global',]

years_sex_death$year <- as.factor(years_sex_death$year)

P1 <- ggplot(data = years_sex_death, aes(group = sex_name)) +
  geom_line(aes(x = year, y = val, color = sex_name), size = 0.8) +
  geom_point(aes(x = year, y = val, shape = sex_name, color = sex_name), size = 3)

P1 + mytheme + xlab('Year') + 
  ylab('Age-standardized Mortality Rate \n (per 100,000)') + 
  scale_color_discrete('Gender') + 
  scale_shape_discrete('Gender') +
  scale_x_discrete(labels = c('1990','','','','', 
                              '1995','','','','', 
                              '2000','','','','', 
                              '2005','','','','',  
                              '2010','','','','',  
                              '2015','','','',  
                              '2019'))

#years_SDI_death 
years_SDI_death <- years[measure_name == 'Deaths' & 
                               age_name == 'Age-standardized' & 
                               metric_name == 'Rate' &
                               sex_name == 'Both' &
                               location_name %in% c("Global", "High SDI", 
                                                    "High-middle SDI", "Middle SDI",
                                                    "Low-middle SDI", "Low SDI"),]
years_SDI_death$year <- as.factor(years_SDI_death$year)

P1 <- ggplot(data = years_SDI_death, aes(group = location_name)) +
  geom_line(aes(x = year, y = val, color = location_name), size = 0.8) +
  geom_point(aes(x = year, y = val, color = location_name), size = 3)

P1 + mytheme + xlab('Year') + 
  ylab('Age-standardized Mortality Rate \n (per 100,000)') +
  guides(color = guide_legend(title = NULL)) +
  scale_x_discrete(labels = c('1990','','','','', 
                              '1995','','','','', 
                              '2000','','','','', 
                              '2005','','','','',  
                              '2010','','','','',  
                              '2015','','','',  
                              '2019'))

#years_sex_DALY
years_sex_DALY <- years[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                           age_name == 'Age-standardized' & 
                           metric_name == 'Rate' &
                           location_name == 'Global',]

years_sex_DALY$year <- as.factor(years_sex_DALY$year)

P1 <- ggplot(data = years_sex_DALY, aes(group = sex_name)) +
  geom_line(aes(x = year, y = val, color = sex_name), size = 0.8) +
  geom_point(aes(x = year, y = val, shape = sex_name, color = sex_name), size = 3)

P1 + mytheme + xlab('Year') + 
  ylab('Age-standardized DALY Rate \n (per 100,000)') + 
  scale_color_discrete('Gender') + 
  scale_shape_discrete('Gender') +
  scale_x_discrete(labels = c('1990','','','','', 
                              '1995','','','','', 
                              '2000','','','','', 
                              '2005','','','','',  
                              '2010','','','','',  
                              '2015','','','',  
                              '2019'))

#years_SDI_DALY 
years_SDI_DALY <- years[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                           age_name == 'Age-standardized' & 
                           metric_name == 'Rate' &
                           sex_name == 'Both' &
                           location_name %in% c("Global", "High SDI", 
                                                "High-middle SDI", "Middle SDI",
                                                "Low-middle SDI", "Low SDI"),]
years_SDI_DALY$year <- as.factor(years_SDI_DALY$year)

P1 <- ggplot(data = years_SDI_DALY, aes(group = location_name)) +
  geom_line(aes(x = year, y = val, color = location_name), size = 0.8) +
  geom_point(aes(x = year, y = val, color = location_name), size = 3)

P1 + mytheme + xlab('Year') + 
  ylab('Age-standardized DALY Rate \n (per 100,000)') +
  guides(color = guide_legend(title = NULL)) +
  scale_x_discrete(labels = c('1990','','','','', 
                              '1995','','','','', 
                              '2000','','','','', 
                              '2005','','','','',  
                              '2010','','','','',  
                              '2015','','','',  
                              '2019'))

#risk factors * SDI=============================================================
#Death
risk_factors <- fread('G:/URI/single/risk_factors.csv')
head(risk_factors)
unique(risk_factors$rei_name)
risk_SDI_Death <- risk_factors[measure_name == 'Deaths' & sex_name == 'Both' &
                                 age_name == 'Age-standardized' & year == 2019 &
                                 metric_name == 'Rate' &
                                 rei_name %in% c('Short gestation', 'Low birth weight',
                                                 'Ambient particulate matter pollution',
                                                 'Household air pollution from solid fuels')]


p1 <- ggplot(data = risk_SDI_Death, aes(x = location_name, y = val, fill = rei_name)) +
  geom_bar(position = 'dodge', stat = 'identity') +
  scale_x_discrete(limits = c('Global', 'High SDI', 'High-middle SDI', 'Middle SDI', 'Low-middle SDI', 'Low SDI')) +
  scale_fill_discrete(labels = c("Ambient particulate matter pollution  ", "Household air pollution from solid fuels  ",
                                 "Low birth weight  ", "Short gestation  "))
mytheme <- theme_bw() + 
  theme(
    plot.margin = margin(t = 20, r = 5, b = 5, l = 5, unit = 'pt'),
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text = element_text(color = 'black',face = 'plain', size = 12),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    axis.text.x = element_text(color = 'black', size = 11, angle = 15, hjust = 1, vjust = 1),
    axis.text.y = element_text(size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "grey36", size = 0.5, lineend = 'square'),
    legend.position = "bottom",
    legend.text = element_text(color = 'black',face = 'bold', size = 12),
    legend.title = element_blank())

p1 + mytheme + xlab('') + 
  guides(fill = guide_legend(ncol = 2, byrow = F)) +
  ylab('Age-standardized Mortality Rate \n (per 100,000)')

#DALY
risk_SDI_DALY <- risk_factors[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                 age_name == 'Age-standardized' & year == 2019 &
                                 metric_name == 'Rate' &
                                 rei_name %in% c('Short gestation', 'Low birth weight',
                                                 'Ambient particulate matter pollution',
                                                 'Household air pollution from solid fuels')]


p1 <- ggplot(data = risk_SDI_DALY, aes(x = location_name, y = val, fill = rei_name)) +
  geom_bar(position = 'dodge', stat = 'identity') +
  scale_x_discrete(limits = c('Global', 'High SDI', 'High-middle SDI', 'Middle SDI', 'Low-middle SDI', 'Low SDI')) +
  scale_fill_discrete(labels = c("Ambient particulate matter pollution  ", "Household air pollution from solid fuels  ",
                                 "Low birth weight  ", "Short gestation  "))

p1 + mytheme + xlab('') + 
  guides(fill = guide_legend(ncol = 2, byrow = F)) +
  ylab('Age-standardized DALY Rate \n (per 100,000)')

#risk factors * sex * ages======================================================
#Death
risk_factors <- fread('G:/URI/single/risk_ages.csv')
head(risk_factors)
unique(risk_factors$rei_name)

risk_SDI_Death <- risk_factors[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                                 age_name == 'All Ages'  & 
                                 year == 2019 &
                                 location_name == 'Global' &
                                 metric_name == 'Rate']

p1 <- ggplot(data = risk_SDI_Death, aes(x = sex_name, y = val, fill = rei_name)) +
  geom_bar(position = 'dodge', stat = 'identity') 
p1


mytheme <- theme_bw() + 
  theme(
    axis.title.x  = element_text(face = 'plain', size = 12, lineheight = 0.35),
    axis.title.y  = element_text(face = 'plain', size = 12, lineheight = 0.5),
    axis.text = element_text(color = 'grey36',face = 'plain', size = 10),
    axis.ticks = element_line(color = 'grey36', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    #axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "grey36", size = 0.5, lineend = 'square'),
    legend.position = "bottom",
    legend.text = element_text(color = 'black',face = 'plain', size = 12),
    legend.title = element_blank())

p1 + mytheme + xlab('') + 
  ylab('Age-standardized Mortality Rate (per 100,000)')
#only available for children, so abandoned
#risk*sex*years=================================================================
#Death
risk_factors <- fread('G:/URI/single/risk_years.csv')
head(risk_factors)
unique(risk_factors$rei_name)
risk_SDI_Death <- risk_factors[measure_name == 'Deaths' & 
                                 age_name == 'Age-standardized'  & 
                                 location_name == 'Global' &
                                 metric_name == 'Rate' &
                                 sex_name == 'Both']

#risk_SDI_Death$year <- as.factor(risk_SDI_Death$year)

p1 <- ggplot(data = risk_SDI_Death, aes(x = year, y = val, fill = rei_name)) +
  geom_area()

mytheme <- theme_bw() + 
  theme(
    axis.title.x  = element_text(face = 'bold', size = 13, vjust = 1),
    axis.title.y  = element_text(face = 'bold', size = 13, vjust = 2),
    axis.text = element_text(color = 'black',face = 'plain', size = 12),
    axis.ticks = element_line(color = 'black', size = 0.5),
    axis.ticks.length = unit(0.2, 'cm'),
    axis.text.x = element_text(size = 11, angle = 0, hjust = 0.5, vjust = 1),
    axis.text.y = element_text(size = 11, angle = 90, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = NA),
    panel.grid.minor = element_line(color = NA),
    panel.border = element_rect(color = "white"),
    axis.line = element_line(color = "grey36", size = 0.5, lineend = 'square'),
    legend.position = "bottom",
    legend.text = element_text(color = 'black',face = 'bold', size = 12),
    legend.title = element_blank())

p1 + mytheme + 
  xlab('Year') + 
  ylab('Age-standardized Mortality Rate \n (per 100,000)') + 
  guides(fill = guide_legend(ncol = 2, byrow = F)) +
  scale_x_continuous(breaks = c(1990,1995,2000, 2005, 2010, 2015, 2019))

#DALY
risk_SDI_DALY <- risk_factors[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                                 age_name == 'Age-standardized'  & 
                                 location_name == 'Global' &
                                 metric_name == 'Rate' &
                                 sex_name == 'Both']

#risk_SDI_DALY$year <- as.factor(risk_SDI_DALY$year)

p1 <- ggplot(data = risk_SDI_DALY, aes(x = year, y = val, fill = rei_name)) +
  geom_area()

p1 + mytheme + 
  xlab('Year') + 
  ylab('Age-standardized DALY Rate \n (per 100,000)') + 
  guides(fill = guide_legend(ncol = 2, byrow = F)) +
  scale_x_continuous(breaks = c(1990,1995,2000, 2005, 2010, 2015, 2019))

#Table_SDI======================================================================
location_ids <- fread('G:/URI/SDI_1990_2019.csv')

locations <- fread('G:/URI/single/location.csv')
location_change <- fread('G:/URI/change/locations_change.csv')

#incidence
#1990
#age-standardized
location_as_incidence_1990 <- locations[measure_name == 'Incidence' & sex_name == 'Both' &
                                  age_name == 'Age-standardized' & year == 1990 &
                                  metric_name == 'Rate',]

location_as_incidence_1990$as_Incidence_1990 <- round(location_as_incidence_1990$val, digits = 1)
location_as_incidence_1990$as_Incidence_1990_upper <- round(location_as_incidence_1990$upper, digits = 1)
location_as_incidence_1990$as_Incidence_1990_lower <- round(location_as_incidence_1990$lower, digits = 1)
location_as_incidence_1990$as_Incidence_1990 <- paste(location_as_incidence_1990$as_Incidence_1990,' (', 
                                                      location_as_incidence_1990$as_Incidence_1990_lower, ' to ', 
                                                      location_as_incidence_1990$as_Incidence_1990_upper, ')', sep = '')
location_as_incidence_1990 <- location_as_incidence_1990[,.(location_id, as_Incidence_1990)]
setkey(location_as_incidence_1990, location_id)

#all-ages
location_ag_incidence_1990 <- locations[measure_name == 'Incidence' & sex_name == 'Both' &
                                          age_name == 'All Ages' & year == 1990 &
                                          metric_name == 'Number',]

location_ag_incidence_1990$ag_Incidence_1990 <- round(location_ag_incidence_1990$val/1000000, digits = 1)
location_ag_incidence_1990$ag_Incidence_1990_upper <- round(location_ag_incidence_1990$upper/1000000, digits = 1)
location_ag_incidence_1990$ag_Incidence_1990_lower <- round(location_ag_incidence_1990$lower/1000000, digits = 1)
location_ag_incidence_1990$ag_Incidence_1990 <- paste(location_ag_incidence_1990$ag_Incidence_1990,' (', 
                                                      location_ag_incidence_1990$ag_Incidence_1990_lower, ' to ', 
                                                      location_ag_incidence_1990$ag_Incidence_1990_upper, ')', sep = '')
location_ag_incidence_1990 <- location_ag_incidence_1990[,.(location_id, ag_Incidence_1990)]
setkey(location_ag_incidence_1990, location_id)

#2019
#age-standardized
location_as_incidence_2019 <- locations[measure_name == 'Incidence' & sex_name == 'Both' &
                                          age_name == 'Age-standardized' & year == 2019 &
                                          metric_name == 'Rate',]

location_as_incidence_2019$as_Incidence_2019 <- round(location_as_incidence_2019$val, digits = 1)
location_as_incidence_2019$as_Incidence_2019_upper <- round(location_as_incidence_2019$upper, digits = 1)
location_as_incidence_2019$as_Incidence_2019_lower <- round(location_as_incidence_2019$lower, digits = 1)
location_as_incidence_2019$as_Incidence_2019 <- paste(location_as_incidence_2019$as_Incidence_2019,' (', 
                                                      location_as_incidence_2019$as_Incidence_2019_lower, ' to ', 
                                                      location_as_incidence_2019$as_Incidence_2019_upper, ')', sep = '')
location_as_incidence_2019 <- location_as_incidence_2019[,.(location_id, as_Incidence_2019)]
setkey(location_as_incidence_2019, location_id)

#all-ages
location_ag_incidence_2019 <- locations[measure_name == 'Incidence' & sex_name == 'Both' &
                                          age_name == 'All Ages' & year == 2019 &
                                          metric_name == 'Number',]

location_ag_incidence_2019$ag_Incidence_2019 <- round(location_ag_incidence_2019$val/1000000, digits = 1)
location_ag_incidence_2019$ag_Incidence_2019_upper <- round(location_ag_incidence_2019$upper/1000000, digits = 1)
location_ag_incidence_2019$ag_Incidence_2019_lower <- round(location_ag_incidence_2019$lower/1000000, digits = 1)
location_ag_incidence_2019$ag_Incidence_2019 <- paste(location_ag_incidence_2019$ag_Incidence_2019,' (', 
                                                      location_ag_incidence_2019$ag_Incidence_2019_lower, ' to ', 
                                                      location_ag_incidence_2019$ag_Incidence_2019_upper, ')', sep = '')
location_ag_incidence_2019 <- location_ag_incidence_2019[,.(location_id, ag_Incidence_2019)]
setkey(location_ag_incidence_2019, location_id)

#change
#age-standardized
location_as_incidence_change <- location_change[measure_name == 'Incidence' & 
                                                  age_name == 'Age-standardized' & 
                                                  metric_name == 'Rate' &
                                                  year_start == 1990 &
                                                  year_end == 2019 &
                                                  sex_name == 'Both',]

location_as_incidence_change$Incidence_as_change <- round(location_as_incidence_change$val, digits = 2)
location_as_incidence_change$Incidence_as_change_upper <- round(location_as_incidence_change$upper, digits = 2)
location_as_incidence_change$Incidence_as_change_lower <- round(location_as_incidence_change$lower, digits = 2)
location_as_incidence_change$Incidence_as_change <- paste(location_as_incidence_change$Incidence_as_change,' (', 
                                                          location_as_incidence_change$Incidence_as_change_lower, ' to ', 
                                                          location_as_incidence_change$Incidence_as_change_upper, ')', sep = '')

location_as_incidence_change <- location_as_incidence_change[,.(location_id, Incidence_as_change)]
setkey(location_as_incidence_change, location_id)


#all-ages
location_ag_incidence_change <- location_change[measure_name == 'Incidence' & 
                                     age_name == 'All Ages' & 
                                     metric_name == 'Number' &
                                     year_start == 1990 &
                                     year_end == 2019 &
                                     sex_name == 'Both',]

location_ag_incidence_change$Incidence_ag_change <- round(location_ag_incidence_change$val, digits = 2)
location_ag_incidence_change$Incidence_ag_change_upper <- round(location_ag_incidence_change$upper, digits = 2)
location_ag_incidence_change$Incidence_ag_change_lower <- round(location_ag_incidence_change$lower, digits = 2)
location_ag_incidence_change$Incidence_ag_change <- paste(location_ag_incidence_change$Incidence_ag_change,' (', 
                                                       location_ag_incidence_change$Incidence_ag_change_lower, ' to ', 
                                                       location_ag_incidence_change$Incidence_ag_change_upper, ')', sep = '')

location_ag_incidence_change <- location_ag_incidence_change[,.(location_id, Incidence_ag_change)]
setkey(location_ag_incidence_change, location_id)


Table_incidence <- location_ag_incidence_1990[location_ag_incidence_2019]
setkey(Table_incidence, location_id)

Table_incidence <- Table_incidence[location_ag_incidence_change]
setkey(Table_incidence, location_id)

Table_incidence <- Table_incidence[location_as_incidence_1990]
setkey(Table_incidence, location_id)

Table_incidence <- Table_incidence[location_as_incidence_2019]
setkey(Table_incidence, location_id)

Table_incidence <- Table_incidence[location_as_incidence_change]
setkey(Table_incidence, location_id)

setkey(location_ids, location_id)
Table_incidence <- Table_incidence[location_ids]
head(Table_incidence)

Table_incidence <- Table_incidence[,.(location_id, region, SDI_1990, SDI_2019, 
                   ag_Incidence_1990, ag_Incidence_2019, Incidence_ag_change,
                   as_Incidence_1990, as_Incidence_2019, Incidence_as_change)]

write.csv(Table_incidence, 'G:/URI/Table_incidence.csv')


#DALY
#1990
#age-standardized
location_as_DALY_1990 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                          age_name == 'Age-standardized' & year == 1990 &
                                          metric_name == 'Rate',]

location_as_DALY_1990$as_DALY_1990 <- round(location_as_DALY_1990$val, digits = 1)
location_as_DALY_1990$as_DALY_1990_upper <- round(location_as_DALY_1990$upper, digits = 1)
location_as_DALY_1990$as_DALY_1990_lower <- round(location_as_DALY_1990$lower, digits = 1)
location_as_DALY_1990$as_DALY_1990 <- paste(location_as_DALY_1990$as_DALY_1990,' (', 
                                                 location_as_DALY_1990$as_DALY_1990_lower, ' to ', 
                                                 location_as_DALY_1990$as_DALY_1990_upper, ')', sep = '')
location_as_DALY_1990 <- location_as_DALY_1990[,.(location_id, as_DALY_1990)]
setkey(location_as_DALY_1990, location_id)

#all-ages
location_ag_DALY_1990 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                          age_name == 'All Ages' & year == 1990 &
                                          metric_name == 'Number',]

location_ag_DALY_1990$ag_DALY_1990 <- round(location_ag_DALY_1990$val/1000, digits = 1)
location_ag_DALY_1990$ag_DALY_1990_upper <- round(location_ag_DALY_1990$upper/1000, digits = 1)
location_ag_DALY_1990$ag_DALY_1990_lower <- round(location_ag_DALY_1990$lower/1000, digits = 1)
location_ag_DALY_1990$ag_DALY_1990 <- paste(location_ag_DALY_1990$ag_DALY_1990,' (', 
                                                 location_ag_DALY_1990$ag_DALY_1990_lower, ' to ', 
                                                 location_ag_DALY_1990$ag_DALY_1990_upper, ')', sep = '')
location_ag_DALY_1990 <- location_ag_DALY_1990[,.(location_id, ag_DALY_1990)]
setkey(location_ag_DALY_1990, location_id)

#2019
#age-standardized
location_as_DALY_2019 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                     age_name == 'Age-standardized' & year == 2019 &
                                     metric_name == 'Rate',]

location_as_DALY_2019$as_DALY_2019 <- round(location_as_DALY_2019$val, digits = 2)
location_as_DALY_2019$as_DALY_2019_upper <- round(location_as_DALY_2019$upper, digits = 2)
location_as_DALY_2019$as_DALY_2019_lower <- round(location_as_DALY_2019$lower, digits = 2)
location_as_DALY_2019$as_DALY_2019 <- paste(location_as_DALY_2019$as_DALY_2019,' (', 
                                            location_as_DALY_2019$as_DALY_2019_lower, ' to ', 
                                            location_as_DALY_2019$as_DALY_2019_upper, ')', sep = '')
location_as_DALY_2019 <- location_as_DALY_2019[,.(location_id, as_DALY_2019)]
setkey(location_as_DALY_2019, location_id)

#all-ages
location_ag_DALY_2019 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                     age_name == 'All Ages' & year == 1990 &
                                     metric_name == 'Number',]

location_ag_DALY_2019$ag_DALY_2019 <- round(location_ag_DALY_2019$val/1000, digits = 2)
location_ag_DALY_2019$ag_DALY_2019_upper <- round(location_ag_DALY_2019$upper/1000, digits = 2)
location_ag_DALY_2019$ag_DALY_2019_lower <- round(location_ag_DALY_2019$lower/1000, digits = 2)
location_ag_DALY_2019$ag_DALY_2019 <- paste(location_ag_DALY_2019$ag_DALY_2019,' (', 
                                            location_ag_DALY_2019$ag_DALY_2019_lower, ' to ', 
                                            location_ag_DALY_2019$ag_DALY_2019_upper, ')', sep = '')
location_ag_DALY_2019 <- location_ag_DALY_2019[,.(location_id, ag_DALY_2019)]
setkey(location_ag_DALY_2019, location_id)


#change
#age-standardized
location_as_DALY_change <- location_change[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                                                  age_name == 'Age-standardized' & 
                                                  metric_name == 'Rate' &
                                                  year_start == 1990 &
                                                  year_end == 2019 &
                                                  sex_name == 'Both',]

location_as_DALY_change$DALY_as_change <- round(location_as_DALY_change$val, digits = 2)
location_as_DALY_change$DALY_as_change_upper <- round(location_as_DALY_change$upper, digits = 2)
location_as_DALY_change$DALY_as_change_lower <- round(location_as_DALY_change$lower, digits = 2)
location_as_DALY_change$DALY_as_change <- paste(location_as_DALY_change$DALY_as_change,' (', 
                                                location_as_DALY_change$DALY_as_change_lower, ' to ', 
                                                location_as_DALY_change$DALY_as_change_upper, ')', sep = '')

location_as_DALY_change <- location_as_DALY_change[,.(location_id, DALY_as_change)]
setkey(location_as_DALY_change, location_id)


#all-ages
location_ag_DALY_change <- location_change[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                                                  age_name == 'All Ages' & 
                                                  metric_name == 'Number' &
                                                  year_start == 1990 &
                                                  year_end == 2019 &
                                                  sex_name == 'Both',]

location_ag_DALY_change$DALY_ag_change <- round(location_ag_DALY_change$val, digits = 2)
location_ag_DALY_change$DALY_ag_change_upper <- round(location_ag_DALY_change$upper, digits = 2)
location_ag_DALY_change$DALY_ag_change_lower <- round(location_ag_DALY_change$lower, digits = 2)
location_ag_DALY_change$DALY_ag_change <- paste(location_ag_DALY_change$DALY_ag_change,' (', 
                                                location_ag_DALY_change$DALY_ag_change_lower, ' to ', 
                                                location_ag_DALY_change$DALY_ag_change_upper, ')', sep = '')

location_ag_DALY_change <- location_ag_DALY_change[,.(location_id, DALY_ag_change)]
setkey(location_ag_DALY_change, location_id)


Table_DALY<- location_ag_DALY_1990[location_ag_DALY_2019]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_ag_DALY_change]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_as_DALY_1990]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_as_DALY_2019]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_as_DALY_change]
setkey(Table_DALY, location_id)

setkey(location_ids, location_id)
Table_DALY <- Table_DALY[location_ids]
head(Table_DALY)

Table_DALY <- Table_DALY[,.(location_id, region, SDI_1990, SDI_2019, 
                                      ag_DALY_1990, ag_DALY_2019, DALY_ag_change,
                                      as_DALY_1990, as_DALY_2019, DALY_as_change)]
write.csv(Table_DALY, 'G:/URI/Table_DALY.csv')

#Table_Death====================================================================
locations <- fread('G:/URI/single/location.csv')
location_change <- fread('G:/URI/change/locations_change.csv')

location_ids <- fread('G:/URI/SDI_1990_2019.csv')

#incidence
#1990
#age-standardized
location_as_mortality_1990 <- locations[measure_name == 'Deaths' & sex_name == 'Both' &
                                          age_name == 'Age-standardized' & year == 1990 &
                                          metric_name == 'Rate',]

location_as_mortality_1990$as_mortality_1990 <- round(location_as_mortality_1990$val, digits = 3)
location_as_mortality_1990$as_mortality_1990_upper <- round(location_as_mortality_1990$upper, digits = 3)
location_as_mortality_1990$as_mortality_1990_lower <- round(location_as_mortality_1990$lower, digits = 3)
location_as_mortality_1990$as_mortality_1990 <- paste(location_as_mortality_1990$as_mortality_1990,' (', 
                                                      location_as_mortality_1990$as_mortality_1990_lower, ' to ', 
                                                      location_as_mortality_1990$as_mortality_1990_upper, ')', sep = '')
location_as_mortality_1990 <- location_as_mortality_1990[,.(location_id, as_mortality_1990)]
setkey(location_as_mortality_1990, location_id)

#all-ages
location_ag_mortality_1990 <- locations[measure_name == 'Deaths' & sex_name == 'Both' &
                                          age_name == 'All Ages' & year == 1990 &
                                          metric_name == 'Number',]

location_ag_mortality_1990$ag_mortality_1990 <- round(location_ag_mortality_1990$val, digits = 2)
location_ag_mortality_1990$ag_mortality_1990_upper <- round(location_ag_mortality_1990$upper, digits = 2)
location_ag_mortality_1990$ag_mortality_1990_lower <- round(location_ag_mortality_1990$lower, digits = 2)
location_ag_mortality_1990$ag_mortality_1990 <- paste(location_ag_mortality_1990$ag_mortality_1990,' (', 
                                                      location_ag_mortality_1990$ag_mortality_1990_lower, ' to ', 
                                                      location_ag_mortality_1990$ag_mortality_1990_upper, ')', sep = '')
location_ag_mortality_1990 <- location_ag_mortality_1990[,.(location_id, ag_mortality_1990)]
setkey(location_ag_mortality_1990, location_id)

#2019
#age-standardized
location_as_mortality_2019 <- locations[measure_name == 'Deaths' & sex_name == 'Both' &
                                          age_name == 'Age-standardized' & year == 2019 &
                                          metric_name == 'Rate',]

location_as_mortality_2019$as_mortality_2019 <- round(location_as_mortality_2019$val, digits = 3)
location_as_mortality_2019$as_mortality_2019_upper <- round(location_as_mortality_2019$upper, digits = 3)
location_as_mortality_2019$as_mortality_2019_lower <- round(location_as_mortality_2019$lower, digits = 3)
location_as_mortality_2019$as_mortality_2019 <- paste(location_as_mortality_2019$as_mortality_2019,' (', 
                                                      location_as_mortality_2019$as_mortality_2019_lower, ' to ', 
                                                      location_as_mortality_2019$as_mortality_2019_upper, ')', sep = '')
location_as_mortality_2019 <- location_as_mortality_2019[,.(location_id, as_mortality_2019)]
setkey(location_as_mortality_2019, location_id)

#all-ages
location_ag_mortality_2019 <- locations[measure_name == 'Deaths' & sex_name == 'Both' &
                                          age_name == 'All Ages' & year == 2019 &
                                          metric_name == 'Number',]

location_ag_mortality_2019$ag_mortality_2019 <- round(location_ag_mortality_2019$val, digits = 2)
location_ag_mortality_2019$ag_mortality_2019_upper <- round(location_ag_mortality_2019$upper, digits = 2)
location_ag_mortality_2019$ag_mortality_2019_lower <- round(location_ag_mortality_2019$lower, digits = 2)
location_ag_mortality_2019$ag_mortality_2019 <- paste(location_ag_mortality_2019$ag_mortality_2019,' (', 
                                                      location_ag_mortality_2019$ag_mortality_2019_lower, ' to ', 
                                                      location_ag_mortality_2019$ag_mortality_2019_upper, ')', sep = '')
location_ag_mortality_2019 <- location_ag_mortality_2019[,.(location_id, ag_mortality_2019)]
setkey(location_ag_mortality_2019, location_id)

#change
#age-standardized
location_as_mortality_change <- location_change[measure_name == 'Deaths' & 
                                                  age_name == 'Age-standardized' & 
                                                  metric_name == 'Rate' &
                                                  year_start == 1990 &
                                                  year_end == 2019 &
                                                  sex_name == 'Both',]

location_as_mortality_change$mortality_as_change <- round(location_as_mortality_change$val, digits = 3)
location_as_mortality_change$mortality_as_change_upper <- round(location_as_mortality_change$upper, digits = 3)
location_as_mortality_change$mortality_as_change_lower <- round(location_as_mortality_change$lower, digits = 3)
location_as_mortality_change$mortality_as_change <- paste(location_as_mortality_change$mortality_as_change,' (', 
                                                          location_as_mortality_change$mortality_as_change_lower, ' to ', 
                                                          location_as_mortality_change$mortality_as_change_upper, ')', sep = '')

location_as_mortality_change <- location_as_mortality_change[,.(location_id, mortality_as_change)]
setkey(location_as_mortality_change, location_id)


#all-ages
location_ag_mortality_change <- location_change[measure_name == 'Deaths' & 
                                                  age_name == 'All Ages' & 
                                                  metric_name == 'Number' &
                                                  year_start == 1990 &
                                                  year_end == 2019 &
                                                  sex_name == 'Both',]

location_ag_mortality_change$mortality_ag_change <- round(location_ag_mortality_change$val, digits = 3)
location_ag_mortality_change$mortality_ag_change_upper <- round(location_ag_mortality_change$upper, digits = 3)
location_ag_mortality_change$mortality_ag_change_lower <- round(location_ag_mortality_change$lower, digits = 3)
location_ag_mortality_change$mortality_ag_change <- paste(location_ag_mortality_change$mortality_ag_change,' (', 
                                                          location_ag_mortality_change$mortality_ag_change_lower, ' to ', 
                                                          location_ag_mortality_change$mortality_ag_change_upper, ')', sep = '')

location_ag_mortality_change <- location_ag_mortality_change[,.(location_id, location_name, mortality_ag_change)]
setkey(location_ag_mortality_change, location_id)


Table_mortality <- location_ag_mortality_1990[location_ag_mortality_2019]
setkey(Table_mortality, location_id)

Table_mortality <- Table_mortality[location_ag_mortality_change]
setkey(Table_mortality, location_id)

Table_mortality <- Table_mortality[location_as_mortality_1990]
setkey(Table_mortality, location_id)

Table_mortality <- Table_mortality[location_as_mortality_2019]
setkey(Table_mortality, location_id)

Table_mortality <- Table_mortality[location_as_mortality_change]
setkey(Table_mortality, location_id)

head(Table_mortality)

Table_mortality <- Table_mortality[,.(location_id, location_name,  
                                      ag_mortality_1990, ag_mortality_2019, mortality_ag_change,
                                      as_mortality_1990, as_mortality_2019, mortality_as_change)]

super_regions <- c(1,44637,44636,44639,44634,44635,31,
                   32,42,56,64,70,65,100,96,73,103,120,
                   104,124,134,137,138,158,159,4,5,21,
                   9,166,167,174,192,199)

regions <- location_ids$location_id
all_regions <- c(super_regions, regions)

Table_mortality <- Table_mortality[location_id %in% all_regions]

write.csv(Table_mortality, 'G:/URI/Table_mortality.csv')

#Table_DALY====================================================================
locations <- fread('G:/URI/single/location.csv')
location_change <- fread('G:/URI/change/locations_change.csv')
location_ids <- fread('G:/URI/SDI_1990_2019.csv')

#incidence
#1990
#age-standardized
location_as_DALY_1990 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                          age_name == 'Age-standardized' & year == 1990 &
                                          metric_name == 'Rate',]

location_as_DALY_1990$as_DALY_1990 <- round(location_as_DALY_1990$val, digits = 1)
location_as_DALY_1990$as_DALY_1990_upper <- round(location_as_DALY_1990$upper, digits = 1)
location_as_DALY_1990$as_DALY_1990_lower <- round(location_as_DALY_1990$lower, digits = 1)
location_as_DALY_1990$as_DALY_1990 <- paste(location_as_DALY_1990$as_DALY_1990,' (', 
                                            location_as_DALY_1990$as_DALY_1990_lower, ' to ', 
                                            location_as_DALY_1990$as_DALY_1990_upper, ')', sep = '')
location_as_DALY_1990 <- location_as_DALY_1990[,.(location_id, as_DALY_1990)]
setkey(location_as_DALY_1990, location_id)

#all-ages
location_ag_DALY_1990 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                          age_name == 'All Ages' & year == 1990 &
                                          metric_name == 'Number',]

location_ag_DALY_1990$ag_DALY_1990 <- round(location_ag_DALY_1990$val/1000, digits = 1)
location_ag_DALY_1990$ag_DALY_1990_upper <- round(location_ag_DALY_1990$upper/1000, digits = 1)
location_ag_DALY_1990$ag_DALY_1990_lower <- round(location_ag_DALY_1990$lower/1000, digits = 1)
location_ag_DALY_1990$ag_DALY_1990 <- paste(location_ag_DALY_1990$ag_DALY_1990,' (', 
                                            location_ag_DALY_1990$ag_DALY_1990_lower, ' to ', 
                                            location_ag_DALY_1990$ag_DALY_1990_upper, ')', sep = '')
location_ag_DALY_1990 <- location_ag_DALY_1990[,.(location_id, ag_DALY_1990)]
setkey(location_ag_DALY_1990, location_id)

#2019
#age-standardized
location_as_DALY_2019 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                          age_name == 'Age-standardized' & year == 2019 &
                                          metric_name == 'Rate',]

location_as_DALY_2019$as_DALY_2019 <- round(location_as_DALY_2019$val, digits = 1)
location_as_DALY_2019$as_DALY_2019_upper <- round(location_as_DALY_2019$upper, digits = 1)
location_as_DALY_2019$as_DALY_2019_lower <- round(location_as_DALY_2019$lower, digits = 1)
location_as_DALY_2019$as_DALY_2019 <- paste(location_as_DALY_2019$as_DALY_2019,' (', 
                                            location_as_DALY_2019$as_DALY_2019_lower, ' to ', 
                                            location_as_DALY_2019$as_DALY_2019_upper, ')', sep = '')
location_as_DALY_2019 <- location_as_DALY_2019[,.(location_id, as_DALY_2019)]
setkey(location_as_DALY_2019, location_id)

#all-ages
location_ag_DALY_2019 <- locations[measure_name == 'DALYs (Disability-Adjusted Life Years)' & sex_name == 'Both' &
                                          age_name == 'All Ages' & year == 2019 &
                                          metric_name == 'Number',]

location_ag_DALY_2019$ag_DALY_2019 <- round(location_ag_DALY_2019$val/1000, digits = 1)
location_ag_DALY_2019$ag_DALY_2019_upper <- round(location_ag_DALY_2019$upper/1000, digits = 1)
location_ag_DALY_2019$ag_DALY_2019_lower <- round(location_ag_DALY_2019$lower/1000, digits = 1)
location_ag_DALY_2019$ag_DALY_2019 <- paste(location_ag_DALY_2019$ag_DALY_2019,' (', 
                                                 location_ag_DALY_2019$ag_DALY_2019_lower, ' to ', 
                                                 location_ag_DALY_2019$ag_DALY_2019_upper, ')', sep = '')
location_ag_DALY_2019 <- location_ag_DALY_2019[,.(location_id, ag_DALY_2019)]
setkey(location_ag_DALY_2019, location_id)

#change
#age-standardized
location_as_DALY_change <- location_change[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                                                  age_name == 'Age-standardized' & 
                                                  metric_name == 'Rate' &
                                                  year_start == 1990 &
                                                  year_end == 2019 &
                                                  sex_name == 'Both',]

location_as_DALY_change$DALY_as_change <- round(location_as_DALY_change$val, digits = 2)
location_as_DALY_change$DALY_as_change_upper <- round(location_as_DALY_change$upper, digits = 2)
location_as_DALY_change$DALY_as_change_lower <- round(location_as_DALY_change$lower, digits = 2)
location_as_DALY_change$DALY_as_change <- paste(location_as_DALY_change$DALY_as_change,' (', 
                                                     location_as_DALY_change$DALY_as_change_lower, ' to ', 
                                                     location_as_DALY_change$DALY_as_change_upper, ')', sep = '')

location_as_DALY_change <- location_as_DALY_change[,.(location_id, DALY_as_change)]
setkey(location_as_DALY_change, location_id)


#all-ages
location_ag_DALY_change <- location_change[measure_name == 'DALYs (Disability-Adjusted Life Years)' & 
                                                  age_name == 'All Ages' & 
                                                  metric_name == 'Number' &
                                                  year_start == 1990 &
                                                  year_end == 2019 &
                                                  sex_name == 'Both',]

location_ag_DALY_change$DALY_ag_change <- round(location_ag_DALY_change$val, digits = 2)
location_ag_DALY_change$DALY_ag_change_upper <- round(location_ag_DALY_change$upper, digits = 2)
location_ag_DALY_change$DALY_ag_change_lower <- round(location_ag_DALY_change$lower, digits = 2)
location_ag_DALY_change$DALY_ag_change <- paste(location_ag_DALY_change$DALY_ag_change,' (', 
                                                     location_ag_DALY_change$DALY_ag_change_lower, ' to ', 
                                                     location_ag_DALY_change$DALY_ag_change_upper, ')', sep = '')

location_ag_DALY_change <- location_ag_DALY_change[,.(location_id, location_name, DALY_ag_change)]
setkey(location_ag_DALY_change, location_id)


Table_DALY <- location_ag_DALY_1990[location_ag_DALY_2019]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_ag_DALY_change]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_as_DALY_1990]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_as_DALY_2019]
setkey(Table_DALY, location_id)

Table_DALY <- Table_DALY[location_as_DALY_change]
setkey(Table_DALY, location_id)

head(Table_DALY)

Table_DALY <- Table_DALY[,.(location_id, location_name,  
                            ag_DALY_1990, ag_DALY_2019, DALY_ag_change,
                            as_DALY_1990, as_DALY_2019, DALY_as_change)]

super_regions <- c(1,44637,44636,44639,44634,44635,31,
                   32,42,56,64,70,65,100,96,73,103,120,
                   104,124,134,137,138,158,159,4,5,21,
                   9,166,167,174,192,199)

regions <- location_ids$location_id
all_regions <- c(super_regions, regions)

Table_DALY <- Table_DALY[location_id %in% all_regions]

write.csv(Table_DALY, 'G:/URI/Table_DALY.csv')

#SDI============================================================================
SDI <- read_xlsx(path = 'G:/Pancreatitis/SDI_1990_2019.xlsx', range = "A3:AE669", col_names = F)
SDI_1990_2019 <- data.frame(region = SDI$...1, SDI_1990 = SDI$...2, SDI_2019 = SDI$...30)
SDI_1990_2019 <- as.data.table(SDI_1990_2019)
setkey(SDI_1990_2019, region)

ASIR_2019_country <- fread("G:/Pancreatitis/ASIR_2019_country.csv")

#处理ASIR
setkey(ASIR_2019_country, location_name)
ASIR_1990_2019_SDI <- SDI_1990_2019[ASIR_2019_country] 
#多出一个国家，发现Georgia出现了2次，对比原表后发现，SDI 0.841的是佐治亚州，另一个是格鲁吉亚
ASIR_1990_2019_SDI <- ASIR_1990_2019_SDI[-69, ]

#have NA in SDI, check for the missing value
missing_SDI <- fread('G:/Pancreatitis/missing_SDI.csv')
setkey(missing_SDI, V3)
setkey(SDI_1990_2019, region)

missing_SDI <- SDI_1990_2019[missing_SDI]

missing_SDI <- data.frame(region = missing_SDI$V2, SDI_1990 = missing_SDI$SDI_1990, SDI_2019 = missing_SDI$SDI_2019)
missing_SDI <- missing_SDI[!is.na(missing_SDI$SDI_2019),]

SDI_2019_new <- rbind(missing_SDI, SDI_1990_2019) %>% as.data.table()
setkey(SDI_2019_new, region)

setkey(ASIR_2019_country, location_name)
ASIR_2019_new <- SDI_2019_new[ASIR_2019_country] 
ASIR_2019_new <- ASIR_2019_new[-69, ]
ASIR_2019_new$region[48] <- "COte d'Ivoire"
ASIR_2019_new$SDI_2019[48] <- 0.408
ASIR_2019_new$SDI_1990[48] <- 0.256
ASIR_2019_new$SDI_2019 <- as.numeric(ASIR_2019_new$SDI_2019)
ASIR_2019_new$SDI_2019[13] <- 0.692
ASIR_2019_new$SDI_1990[13] <- 0.796

SDI_1990_2019 <- ASIR_2019_new[,.(location_id, region, SDI_1990, SDI_2019)]
parent_id <- location_ids[,.(location_id, parent_id)]
setkey(parent_id, location_id)
setkey(SDI_1990_2019, location_id)
SDI_1990_2019 <- parent_id[SDI_1990_2019]
write.csv(SDI_1990_2019, 'G:/URI/SDI_1990_2019.csv')

#===============================================================================
rm(list = ls())
